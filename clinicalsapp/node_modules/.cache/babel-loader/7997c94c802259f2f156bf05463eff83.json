{"ast":null,"code":"var _jsxFileName = \"/Users/gurinder.kaur/Documents/ReactProjects/clinicalsapp/src/components/AnalyzeData.js\";\n//import { ReactComponent } from '*.svg';\nimport axios from 'axios';\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withParams(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass AnalyzeData extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentWillMount() {\n    const {\n      patientId\n    } = this.props.params;\n    axios.get(\"http://localhost:8080/clinicalservices/api/patients/analyze/\" + patientId).then(res => {\n      this.setState(res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), \"First Name: \", this.state.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 47\n      }, this), \"Last Name: \", this.state.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 45\n      }, this), \"Age: \", this.state.age, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clinical Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map(eachEntry => /*#__PURE__*/_jsxDEV(TableCreator, {\n        item: eachEntry,\n        patientId: this.state.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 53\n      }, this)), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass TableCreator extends React.Component {\n  render() {\n    var eachEntry = this.props.item;\n    var patient = this.props.patientId;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: eachEntry.componentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: eachEntry.componentName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: eachEntry.componentValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: eachEntry.measuredDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default _c = withParams(AnalyzeData);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/gurinder.kaur/Documents/ReactProjects/clinicalsapp/src/components/AnalyzeData.js"],"names":["axios","React","Link","useParams","withParams","Component","props","AnalyzeData","state","clinicalData","componentWillMount","patientId","params","get","then","res","setState","data","render","firstName","lastName","age","map","eachEntry","id","TableCreator","item","patient","componentName","componentValue","measuredDateTime"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAAA;;AAC3B,YAAOC,KAAK;AAAA;;AAAA,wBAAI,QAAC,SAAD,OAAeA,KAAf;AAAsB,MAAA,MAAM,EAAEH,SAAS;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,GAAZ;AAAA,YAA8CA,SAA9C;AAAA;AACD;;AAEH,MAAMI,WAAN,SAA0BN,KAAK,CAACI,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAErCG,KAFqC,GAE7B;AACJC,MAAAA,YAAY,EAAG;AADX,KAF6B;AAAA;;AAKrCC,EAAAA,kBAAkB,GAAE;AAChB,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKL,KAAL,CAAWM,MAA/B;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAU,iEAA+DF,SAAzE,EAAoFG,IAApF,CAAyFC,GAAG,IAAE;AAC1F,WAAKC,QAAL,CAAcD,GAAG,CAACE,IAAlB;AACH,KAFD;AAGH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,kBAEU,KAAKV,KAAL,CAAWW,SAFrB,eAE+B;AAAA;AAAA;AAAA;AAAA,cAF/B,iBAGS,KAAKX,KAAL,CAAWY,QAHpB,eAG6B;AAAA;AAAA;AAAA;AAAA,cAH7B,WAIG,KAAKZ,KAAL,CAAWa,GAJd,eAIkB;AAAA;AAAA;AAAA;AAAA,cAJlB,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALG,EAMF,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,GAAxB,CAA4BC,SAAS,iBAAE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA,SAApB;AAA+B,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWgB;AAArD;AAAA;AAAA;AAAA;AAAA,cAAvC,CANE,eAOH,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASH;;AArBoC;;AAuBzC,MAAMC,YAAN,SAA2BxB,KAAK,CAACI,SAAjC,CAA0C;AACtCa,EAAAA,MAAM,GAAE;AACJ,QAAIK,SAAS,GAAG,KAAKjB,KAAL,CAAWoB,IAA3B;AACA,QAAIC,OAAO,GAAG,KAAKrB,KAAL,CAAWK,SAAzB;AACA,wBAAO;AAAA,6BACC;AAAA,gCACI;AAAA,iCACI;AAAA,mCAAI;AAAA,wBAAIY,SAAS,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,kCACI;AAAA,sBAAKL,SAAS,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKL,SAAS,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKN,SAAS,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAAP;AAYH;;AAhBqC;;AAkB1C,oBAAe1B,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["//import { ReactComponent } from '*.svg';\nimport axios from 'axios';\nimport React from 'react'\nimport {Link} from \"react-router-dom\"\nimport { useParams } from 'react-router-dom';\n\nfunction withParams(Component) {\n    return props => <Component {...props} params={useParams()} />;\n  }\n\nclass AnalyzeData extends React.Component{\n\n    state = {\n        clinicalData : []\n    }\n    componentWillMount(){\n        const {patientId} = this.props.params\n        axios.get(\"http://localhost:8080/clinicalservices/api/patients/analyze/\"+patientId).then(res=>{\n            this.setState(res.data)\n        })\n    }\n    render(){\n        return(<div>\n            <h2>Patient Details: </h2>\n            First Name: {this.state.firstName}<br/>\n            Last Name: {this.state.lastName}<br/>\n            Age: {this.state.age}<br/>\n            <h2>Clinical Report</h2>\n            {this.state.clinicalData.map(eachEntry=><TableCreator item={eachEntry} patientId={this.state.id}/>)}\n            <Link to=\"/\">Go Back</Link>\n        </div>)\n    }\n}\nclass TableCreator extends React.Component{\n    render(){\n        var eachEntry = this.props.item;\n        var patient = this.props.patientId;\n        return(<div>\n                <table>\n                    <tr>\n                        <td><b>{eachEntry.componentName}</b></td>\n                    </tr>\n                    <tr>    \n                        <td>{eachEntry.componentName}</td>\n                        <td>{eachEntry.componentValue}</td>\n                        <td>{eachEntry.measuredDateTime}</td>\n                    </tr>\n                </table>\n        </div>)\n    }\n}\nexport default withParams(AnalyzeData);"]},"metadata":{},"sourceType":"module"}